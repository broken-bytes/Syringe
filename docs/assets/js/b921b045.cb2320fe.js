"use strict";(self.webpackChunksyringe_docs=self.webpackChunksyringe_docs||[]).push([[401],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),d=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=d(e.components);return i.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(t),g=r,m=c["".concat(s,".").concat(g)]||c[g]||u[g]||a;return t?i.createElement(m,o(o({ref:n},p),{},{components:t})):i.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=t[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7408:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=t(7462),r=(t(7294),t(3905));const a={sidebar_position:1,title:"Getting Started",description:"Getting started with Syringe"},o="Getting Started",l={unversionedId:"Usage/first_steps",id:"Usage/first_steps",title:"Getting Started",description:"Getting started with Syringe",source:"@site/docs/Usage/first_steps.mdx",sourceDirName:"Usage",slug:"/Usage/first_steps",permalink:"/Syringe/docs/Usage/first_steps",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Usage/first_steps.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started",description:"Getting started with Syringe"},sidebar:"DocumentationSidebar",previous:{title:"Usage",permalink:"/Syringe/docs/category/usage"},next:{title:"Containers",permalink:"/Syringe/docs/Usage/containers"}},s={},d=[{value:"Initialising Syringe",id:"initialising-syringe",level:2},{value:"Creating Modules",id:"creating-modules",level:2},{value:"Adding Dependencies",id:"adding-dependencies",level:2},{value:"Resolving Dependencies",id:"resolving-dependencies",level:2}],p={toc:d},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("h2",{id:"initialising-syringe"},"Initialising Syringe"),(0,r.kt)("p",null,"Syringe's core is the ",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),". It is the central touchpoint for all interactions with Syringe."),(0,r.kt)("p",null,"There are two types of ",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An ordinary ",(0,r.kt)("inlineCode",{parentName:"li"},"Container")),(0,r.kt)("li",{parentName:"ul"},"A global scope ",(0,r.kt)("inlineCode",{parentName:"li"},"Container"))),(0,r.kt)("p",null,"Creating a global scope ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," is the preferred way as it enables the use of the free DSL functions Syringe provides."),(0,r.kt)("p",null,"Creating a global scope ",(0,r.kt)("inlineCode",{parentName:"p"},"Container"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import Syringe\n\nclass DependencyHandler {\n    init() {\n        // highlight-start\n        injectSyringe {\n            modules {\n                // Modules go here\n            }\n        }\n        // highlight-end\n    }\n}\n")),(0,r.kt)("h2",{id:"creating-modules"},"Creating Modules"),(0,r.kt)("p",null,"Modules are dependency lists in Syringe.\nDefining a module is simple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"let appModule = module {\n    // Dependencies go here\n}\n")),(0,r.kt)("h2",{id:"adding-dependencies"},"Adding Dependencies"),(0,r.kt)("p",null,"Adding dependencies to modules is done via the module DSL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"let appModule = module {\n    // highlight-start\n    singleton { YourType() }\n    factory { Int.random(0..<5) }\n    // highlight-end\n}\n")),(0,r.kt)("h2",{id:"resolving-dependencies"},"Resolving Dependencies"),(0,r.kt)("p",null,"Resolving dependencies is done via either the module or application DSL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class Service {\n    let value: Int\n\n    init(value: Int) { \n        self.value = value\n    }\n}\n\nlet appModule = module {\n    // Resolving at module level\n    // highlight-next-line\n    singleton { YourType(value: get()) }\n    factory { Int.random(0..<5) }\n}\n\nclass View {\n    // Resolving at global level\n    // highlight-next-line\n    let service: Service = get()\n\n    init() {\n\n    }\n}\n")),(0,r.kt)("admonition",{title:"Additional resources",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"More about ",(0,r.kt)("inlineCode",{parentName:"li"},"Container")," can be found ",(0,r.kt)("a",{parentName:"li",href:"/Syringe/docs/Usage/containers"},"here")),(0,r.kt)("li",{parentName:"ul"},"More about Modules can be found ",(0,r.kt)("a",{parentName:"li",href:"/Syringe/docs/Usage/modules"},"here")))))}u.isMDXComponent=!0}}]);